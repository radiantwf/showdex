@use 'sass:math';
@use 'config/colors';
@use 'config/fonts';
@use 'functions/color';
@use 'mixins/aria';
@use 'mixins/flex';
@use 'mixins/font';
@use 'mixins/media';
@use 'mixins/position';
@use 'mixins/spacing';
@use 'mixins/transition';

.container {
  @include position.absolute-fill;
  @include transition.apply(background-color);
  overflow: hidden;

  &.light {
    color: colors.$black;
    background-color: color.alpha(colors.$showdown-background-light, 0.8);

    &.mina {
      background-color: color.alpha(#F5DAE3, 0.72);
    }
  }

  &.dark {
    color: colors.$white;
    background-color: color.alpha(colors.$gray-darkest, 0.8);

    &.mina {
      // background-color: color.alpha(#2D0D1C, 0.64);
      background-color: color.alpha(#3A242E, 0.64);
    }
  }

  &.glassy {
    background-color: colors.$transparent;

    &::before {
      content: '';
      @include position.absolute-fill;
      backdrop-filter: blur(4px);
    }

    &.light::before {
      background-color: color.alpha(colors.$showdown-background-light, 0.56);
    }

    &.light.mina {
      background-color: colors.$transparent;

      &::before {
        background-color: color.alpha(#F5DAE3, 0.56);
      }
    }

    &.dark::before {
      background-color: color.alpha(colors.$gray-darkest, 0.64);
    }

    &.dark.mina {
      background-color: colors.$transparent;

      &::before {
        background-color: color.alpha(#2D0D1C, 0.72);
      }
    }
  }
}

.content {
  @include position.absolute-fill;
  @include flex.column($justify: space-between);
  @include font.apply(fonts.$primary);
  font-size: 12px;
  z-index: 1;
}

.smol .hideWhenSmol {
  display: none;
}

.showdexIcon {
  @include position.absolute-anchor($x: 50%, $y: -60px, $y-prop: bottom);
  width: 264px;
  @include transition.apply(opacity);
  pointer-events: none;

  .light & {
    opacity: 0.76;
  }

  .dark & {
    opacity: 0.84;
  }
}

@keyframes minarex-animation {
  0% {
    transform: translate(-50%, 0);
  }

  100% {
    transform: translate(-50%, 8px);
  }
}

.minarexIcon {
  @include position.absolute($right: -94px, $bottom: -12px, $left: unset);
  width: 296px;
  animation: minarex-animation 4s ease-in infinite alternate;
  @include transition.apply(left, right, opacity);

  &:not(.shady) :global(#sunglasses) {
    display: none;
  }

  .smol & {
    @include position.absolute($right: unset, $left: 74%);
  }

  .verySmol & {
    @include position.absolute($left: 64%);
    width: 248px;
  }
}

.topContent {
  flex: 1;
  width: 100%;
  @include spacing.padding($x: 24px);
}

.banner {
  position: relative;
  @include flex.column-center;
  @include spacing.padding($top: 32px);
  text-align: center;
  user-select: none;
}

.authors {
  @include flex.row-center;
  font-weight: 300;
  font-size: 12px;
  text-transform: uppercase;
  opacity: 0.75;
}

.ampersand {
  @include spacing.margin($x: 12px);
}

.authorButton {
  @include font.apply(fonts.$primary);
  color: inherit;

  .label {
    @include spacing.margin($right: -0.2em);
    font-size: 12px;
    color: inherit;
    letter-spacing: 0.2em;
    text-transform: uppercase;
  }
}

.presents {
  @include spacing.margin($right: -0.2em);
  font-weight: 300;
  font-size: 12px;
  letter-spacing: 0.2em;
  text-transform: uppercase;
  opacity: 0.75;
}

.extensionName {
  @include spacing.margin($right: -0.2em);
  font-weight: 700;
  font-size: 40px;
  color: colors.$transparent;
  letter-spacing: 0.2em;
  text-transform: uppercase;
  text-shadow: 0 0 16px color.alpha(colors.$black, 0.32);
  background: linear-gradient(65deg, #4A9AC7 1%, #F148CC 99%) 0 0 / 100% 100%;
  background-clip: text;
  @include transition.apply(
    (margin-right, 10s),
    (letter-spacing, 10s),
    (background-position, 10s),
    (background-size, 10s),
  );

  &:hover {
    @include spacing.margin($right: -0.5em);
    letter-spacing: 0.5em;
    background-position: 50% 0;
    background-size: 200% 100%;
  }

  .mina & {
    background: linear-gradient(65deg, #E94489 2%, #F8C8C5 98%) 0 0 / 100% 100%;
    background-clip: text;
  }

  .light.mina & {
    text-shadow: 0 0 16px color.alpha(#FF3A78, 0.32);
  }

  .dark.mina & {
    text-shadow: 0 0 16px color.alpha(#9F1641, 0.32);
  }
}

.extensionVersion {
  @include spacing.margin($right: -0.15em);
  @include font.apply(fonts.$mono);
  font-size: 10px;
  letter-spacing: 0.15em;
  // text-indent: 0.15em;
  opacity: 0.64;

  .extensionVersionSuffix {
    opacity: 0.48;
  }
}

.instancesContainer {
  position: relative;
}

.instancesContent {
  position: relative;
  width: 100%;
  min-height: 324px;
  height: 32vh;
  @include spacing.margin($y: 24px);
  border-radius: 16px;
  overflow: hidden;
  @include transition.apply(height, background-color, box-shadow);

  @include media.for-min-height(1000px) {
    height: 48vh;
  }

  &.hiddenDonation {
    height: 52vh;

    @include media.for-min-height(1000px) {
      height: 58vh;
    }

    @include media.for-min-height(1200px) {
      height: 62vh;
    }

    @include media.for-max-height(850px) {
      height: 42vh;
    }

    @include media.for-max-height(750px) {
      height: 36vh;
    }
  }

  .light & {
    background-color: color.alpha(colors.$white, 0.64);
    box-shadow: (
      0 0 1px color.alpha(colors.$black, 0.16),
      0 0 16px color.alpha(colors.$gray-dark, 0.16),
    );
  }

  .light.mina & {
    background-color: color.alpha(#FFEDF3, 0.64);
    box-shadow: (
      0 0 1px color.alpha(#770629, 0.32),
      0 0 16px color.alpha(#9F1641, 0.16),
    );
  }

  .dark & {
    background-color: color.alpha(colors.$black, 0.48);
    box-shadow: (
      0 0 1px color.alpha(colors.$white, 0.32),
      0 0 16px color.alpha(colors.$black, 0.48),
    );
  }

  .dark.mina & {
    // background-color: color.alpha(#2A151F, 0.64);
    background-color: color.alpha(#734158, 0.48);
  }

  .glassy & {
    backdrop-filter: blur(2px);
  }

  .glassy.light & {
    background-color: color.alpha(colors.$white, 0.24);
  }

  .glassy.light.mina & {
    background-color: color.alpha(#FFEDF3, 0.24);
  }

  .glassy.dark & {
    background-color: color.alpha(colors.$black, 0.16);
  }

  .glassy.dark.mina & {
    background-color: color.alpha(#734158, 0.16);
  }
}

.battleRecord {
  @include position.absolute-anchor($x: 50%, $y: -18px, $y-prop: bottom);
}

.scrollableInstances {
  height: 100%;
  @include spacing.padding-all(10px);
}

.instances {
  position: relative;
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  grid-auto-rows: 53px;
  column-gap: 10px;
  row-gap: 10px;
  width: 100%;
  height: 100%;

  .smol & {
    grid-template-columns: minmax(0, 1fr);
  }
}

.instanceButton {
  grid-area: span 1 / span 1;
}

div.newHonkButton {
  border-radius: 12px;
  @include aria.outline($radius: 12px);

  &::before {
    border-radius: 12px;
  }
}

.battleRecordSpacer {
  grid-area: span 1 / span 3;
  height: 20px;

  .smol & {
    grid-area: span 1 / span 1;
  }
}

.empty {
  @include position.absolute-fill;
  @include flex.column-center;
  user-select: none;

  .emptyIcon {
    width: 30px;
    min-width: 30px;
    @include spacing.margin($bottom: 10px);
    opacity: 0.32;
  }

  .emptyLabel {
    max-width: 216px;
    font-size: 12px;
    letter-spacing: 0.1px;
    text-align: center;
    line-height: 15px;
    opacity: 0.64;

    strong {
      font-weight: 600;
    }
  }

  .divider {
    @include flex.row-center;
    @include spacing.margin($y: 16px);

    .dividerLine {
      width: 56px;
      height: 1px;
      opacity: 0.08;
      @include transition.apply(background-color);

      .light & {
        background-color: colors.$black;
      }

      .dark & {
        background-color: colors.$white;
      }
    }

    .dividerLabel {
      @include spacing.padding($x: 12px);
      // font-style: italic;
      letter-spacing: 0.1px;
      opacity: 0.32;
    }
  }
}

.honkButton {
  @include spacing.margin($top: 4px, $x: auto);
}

button.spectateButton {
  @include font.apply(fonts.$primary, ( font-weight: 600 )); // same font-weight as .emptyLabel strong
  font-size: 12px;
  color: inherit;

  &.disabled {
    opacity: 1;
  }

  .spectateButtonLabel {
    font-size: inherit;
    color: inherit;
  }
}

.donations {
  @include spacing.margin($x: auto);
  font-size: 10px;
  text-align: center;
  line-height: 14px;
  user-select: none;

  &.withBattleRecord {
    @include spacing.margin($top: 40px);
  }
}

.donateButton {
  @include spacing.margin($right: auto, $left: auto);
}

.donateFootnote {
  max-width: 250px + 10px;
  @include spacing.padding($all: 6px);
  @include spacing.margin($top: 16px, $x: auto);
  letter-spacing: 0.05px;
  backdrop-filter: blur(3px);
  border-radius: 6px;
  opacity: 0.64;
  @include transition.apply(opacity);

  &.withTitle {
    opacity: 0.4;
  }

  .glassy & {
    backdrop-filter: none;
  }
}

.footer {
  position: relative;
  @include flex.row-between;
  flex: 0 0 73px;
  width: 100%;
  height: 73px;
  @include spacing.padding($x: 24px, $bottom: 2px);
  backdrop-filter: blur(3px);
  border-top: 2px solid;
  @include transition.apply(background-color, border-top-color);
  z-index: 1;

  .smol & {
    justify-content: center;
  }

  .light & {
    background-color: color.alpha(colors.$white, 0.76);
    border-top-color: color.alpha(colors.$white, 0.16);
  }

  .light.mina & {
    background-color: color.alpha(#FDF2F6, 0.76);
  }

  .dark & {
    background-color: color.alpha(colors.$black, 0.72);
    border-top-color: color.alpha(colors.$gray-darkest, 0.16);
  }

  .dark.mina & {
    background-color: color.alpha(#7E405D, 0.32);
  }

  .glassy {
    backdrop-filter: blur(6px);
  }

  .glassy.light & {
    background-color: color.alpha(colors.$white, 0.48);
  }

  .glassy.light.mina & {
    background-color: color.alpha(#FDF2F6, 0.48);
  }

  .glassy.dark & {
    background-color: color.alpha(colors.$black, 0.48);
  }

  .glassy.dark.mina & {
    background-color: color.alpha(#7E405D, 0.24);
  }
}

.links {
  @include flex.row($align: center);

  .light & {
    color: colors.$gray-dark;
  }
}

.linkItem {
  &:not(:first-child):not(:last-child) {
    @include spacing.margin($right: 24px);

    .smol & {
      @include spacing.margin($right: 16px);
    }
  }
}

.settingsButton {
  min-width: 68px;
  height: 44px;
  @include spacing.margin($right: 32px);

  .smol & {
    @include spacing.margin($right: 24px);
  }

  // bad idea, looks weird on non-Retina displays while changing color
  // .settingsIcon {
  //   @include transition.apply((transform, 10s));
  // }

  // &:hover .settingsIcon {
  //   transform: rotateZ(360deg);
  // }
}

/*
.linkSeparator {
  width: 1px;
  height: 28px;
  @include transition.apply(background-color);

  .light & {
    background-color: color.alpha(colors.$gray-darkest, 0.16);
  }

  .dark & {
    background-color: color.alpha(colors.$white, 0.16);
  }
}
*/

.linkButton {
  width: 44px;
  height: 44px;

  .light & {
    color: color.alpha(colors.$black, 0.76);
  }

  .dark & {
    color: color.alpha(colors.$white, 0.76);
  }

  .settingsVisible & {
    .light & {
      opacity: 0.48;
    }

    .dark & {
      opacity: 0.48;
    }
  }

  .signpostIcon {
    transform: scale(0.9);
  }

  // .sparkleIcon {
  //   transform: scale(0.9);
  // }

  // .bugIcon {
  //   transform: rotateZ(90deg);
  // }

  // .clipboardIcon {
  //   transform: scale(0.85);
  // }
}

.linkButtonLabel {
  @include spacing.margin($right: -0.01px);
  letter-spacing: 0.01px;
}

.credits {
  font-size: 10px;
  line-height: 13px;
  text-align: right;
  opacity: 0.56;
  user-select: none;
}

// note: don't use position.absolute-anchor() here cause the BaseButton's
// react-spring will add an inline transform property
.tizeButton {
  @include position.absolute($top: -33%, $right: 24px);
  color: inherit;
  opacity: 0.56;
  @include transition.apply(color, opacity);

  .light & {
    color: colors.$gray-dark;
    opacity: 1;
  }

  &:hover {
    color: colors.$blue;
    opacity: 1;
  }
}

.tizeLogo {
  height: 36px;
  min-height: 36px;
}
